@csalgo

Coding Problem
Problem Statement: Quick Sort
Problem Level: MEDIUM
Problem Description:
Sort an array A using Quick Sort.
Change in the input array itself. So no need to return or print anything.
<br>
Input format :
Line 1 : Integer n i.e. Array size
Line 2 : Array elements (separated by space)

Output format :
Array elements in increasing order (separated by space)

Constraints :
1 <= n <= 10^3

Sample Input 1 :
6 
2 6 8 5 4 3

Sample Output 1 :
2 3 4 5 6 8

Sample Input 2 :
5
1 5 2 7 3

Sample Output 2 :
1 2 3 5 7

@csalgo

#include<bits/stdc++.h>
using namespace std;
int partition(int *arr,int low,int high){
	int pivot=arr[high];
	int i=low-1;
	for(int j=low;j<=high-1;j++){
		if(arr[j]<pivot){
			i++;
			swap(arr[j],arr[i]);
		}	
	}
	swap(arr[high],arr[i+1]);
	return i+1;
}
void func(int *arr,int low,int high){
	if(low<high){
		int pi=partition(arr,low,high);	
		func(arr,low,pi-1);
		func(arr,pi+1,high);
	}
}
int main()
{
    int n;
    cin>>n;
    int *arr=new int[n];
    for(int i=0;i<n;i++)
    	cin>>arr[i];
    func(arr,0,n-1);
	for(int i=0;i<n;i++)
    	cout<<arr[i]<<" ";
    return 0;
}