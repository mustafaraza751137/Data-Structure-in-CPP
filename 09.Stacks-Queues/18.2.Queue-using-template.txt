#include<bits/stdc++.h>
using namespace std;

//or place all class code in another file and include here like
// include "Queue.h"
// save as .h file because it can't contain main function to prevent 2 main function
template<typename T>
class Node{
	public:
		T data;
		Node<T> *next;
		Node(T data){
			this->data=data;
			next=NULL;
		}
};
template<typename T>
class Queue{
	Node<T>* head;
	Node<T>* tail;
	int top;
	public:
		Queue(){
			head=NULL;
			tail=NULL;
			top=0;
		}
		void enqueue(T data){
			if(head==NULL){
				head=new Node<T>(data);
				tail=head;
			}
			else{
				Node<T>* newNode=new Node<T>(data);
				tail->next=newNode;
				tail=newNode;
			}
			top++;
		}

		T dequeue(){
			if(top==0){
				return -1;
			}
			top--;
			T data=head->data;
			Node<T>* temp=head;
			head=head->next;
			delete temp;
			return data;
		}

		T front(){
			if(top==0){
				return -1;
			}
			return head->data;
		}

		int size(){
			return top;
		}

		bool isEmpty(){
			return top==0;
		}
};

int main(){
	int t;
	cin>>t;
	Queue<int> obj;
	for(int i=0;i<t;i++){
		int ch;
		cin>>ch;
		switch(ch){
			case 1:
				int data;
				cin>>data;
				obj.enqueue(data);
				break;
			case 2:
				cout<<obj.dequeue()<<endl;
				break;
			case 3:
				cout<<obj.front()<<endl;
				break;
			case 4:
				cout<<obj.size()<<endl;
				break;
			case 5:
				if(obj.isEmpty())
					cout<<"true\n";
				else
					cout<<"false\n";
				break;
			default:
				cout<<"Wrong choice\n";
		}
	}
	return 0;
}