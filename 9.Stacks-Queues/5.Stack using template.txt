#include<bits/stdc++.h>
using namespace std;
template <class T>
class Stack{
	int capacity;
	T *arr;
	int top;
	public:
		Stack(){
			capacity=5;
			arr=new T[5];
			top=0;
		}

		int size(){
			return top;
		}

		void push(T element){
			if(top==capacity){
				T *newArr=new T[2*capacity];
				for(int i=0;i<capacity;i++)
					newArr[i]=arr[i];
				delete []arr;
				arr=newArr;
				capacity*=2;
			}
			arr[top]=element;
			top++;
		}

		T pop(){
			if(top==-1){
				cout<<"Stack is empty\n";
				return 0;
			}
			top--;
			return arr[top];
		}

		T peek(){
			if(top==-1){
				cout<<"Stack is empty\n";
				return 0;
			}
			return arr[top-1];
		}

		bool isEmpty(){
			return top==0;
		}
};

int main(){
	int t;
	cin>>t;
	for(int i=0;i<t;i++){

        //for int change this
		char element;
		Stack<char> obj;
		cin>>element;
        
        //for int change this to -1
		while(element!='-'){
			obj.push(element);
			cin>>element;
		}
		cout<<obj.peek()<<endl;
		cout<<obj.pop()<<endl;
		cout<<obj.pop()<<endl;
		cout<<obj.size()<<endl;
		cout<<obj.peek()<<endl;
		cout<<obj.isEmpty()<<endl;
	}
}